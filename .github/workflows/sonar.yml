name: sonar-scan-cache

on:
  push:
  pull_request:

jobs:
  sonar:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      # --- Cache Maven (utile si le scan relance une compile/test) ---
      - name: Cache Maven repository
        id: cache-maven
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # --- Cache SonarQube ---
      - name: Cache SonarQube analyzer
        id: cache-sonar
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-sonar-

      - name: Build (classes pour le scan)
        run: mvn -B -V -ntp -DskipTests package

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v2
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=mon-projet
            -Dsonar.java.binaries=**/target/classes
